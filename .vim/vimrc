set nocompatible
filetype off
set noerrorbells visualbell t_vb=

set nobackup
set noswapfile
set nowritebackup

set undofile
set undodir=~/.vim/undo
set viminfo+=n~/.vim/viminfo

set ignorecase " Ignore case when searching
set smartcase  " When searching try to be smart about cases
set incsearch  " Jumping search

set listchars=tab:>.,trail:.,nbsp:.
set list

set numberwidth=3

set shiftwidth=2
set tabstop=2
set softtabstop=2 " Number of spaces a tab counts when editing
set expandtab

set hidden
set ttyfast
set lazyredraw
set updatetime=300

set cursorcolumn

set updatetime=300

let base16colorspace=256
colorscheme base16-google-dark

let mapleader = " "

map j gj
map k gk
map <silent> - :silent set hlsearch! hlsearch?<cr>
map <silent> <tab> :set invnumber<cr>
map <silent> q :xa<cr>
map <silent> Ð¹ q<cr>
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nmap <leader>c  <Plug>(coc-codeaction)
nmap <leader>qf <Plug>(coc-fix-current)
nmap <leader>f :CocCommand prettier.formatFile<CR>
nmap z za

function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

autocmd BufWritePre * :%s/\s\+$//e
filetype plugin indent on
syntax on

" Indentation
set autoindent
set cindent
set smartindent

set foldmethod=syntax
set foldlevel=99

set laststatus=2

let g:coc_global_extensions = ['coc-tsserver', 'coc-json', 'coc-prettier', 'coc-yaml', 'coc-git']

let g:netrw_banner = 0
let g:netrw_dirhistmax = 0

" Set default encoding to utf-8
set encoding=utf-8
set termencoding=utf-8

set clipboard=unnamed
set mouse=a

set backspace=indent,eol,start
